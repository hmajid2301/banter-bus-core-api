asyncapi: 2.2.0
info:
  title: Banter Bus Core API
  version: 1.0.0
  description: |
    The Web Socket API definition for the Banter Bus application.

    ### Supported Games

     * [Fibbing It](https://gitlab.com/banter-bus/banter-bus-server/-/wikis/docs/rules/fibbing_it)
servers:
  production:
    url: wss://core.api.banterbus.games/ws
    protocol: wss
    description: Main API broker
defaultContentType: application/json
channels:
  /:
    publish:
      message:
        oneOf:
          - $ref: "#/components/messages/create_room"
          - $ref: "#/components/messages/join_room"
          - $ref: "#/components/messages/rejoin_room"
    subscribe:
      message:
        oneOf:
          - $ref: "#/components/messages/room_created"
          - $ref: "#/components/messages/room_joined"
components:
  messages:
    create_room:
      summary: Create a new game room.
      description: >-
        Client can create a new game room.
      payload:
        $ref: "#/components/schemas/create_room"
      x-response:
        $ref: "#/components/messages/room_created"
    room_created:
      summary: Room created is a response to `create_room` message.
      description: >-
        Server responds to `create_room` message.
      payload:
        $ref: "#/components/schemas/new_room"
    join_room:
      summary: When a player has joined a game room.
      description: >-
        Client can join an existing game room.
      payload:
        $ref: "#/components/schemas/join_room"
      x-response:
        $ref: "#/components/messages/room_joined"
    rejoin_room:
      summary: When a player has left a room and wants to re-join it.
      description: >-
        Client can re-join a game room.
      payload:
        $ref: "#/components/schemas/rejoin_room"
      x-response:
        $ref: "#/components/messages/room_joined"
    room_joined:
      summary: Response to a player joining a room message.
      description: >-
        Server responds to `join_room` or `rejoin_room` event.
      payload:
        $ref: "#/components/schemas/room_joined"
  schemas:
    create_room:
      type: object
    new_room:
      type: object
      properties:
        room_code:
          type: string
          description: Unique code to join the room
          example: ABCDE
      required:
        - room_code
    rejoin_room:
      type: object
      properties:
        player_id:
          type: string
          description: Unique ID of the player trying to re-join the room
        room_code:
          type: string
          description: The unqiue code of the room to join
          example: ABCDE
      required:
        - player_id
        - room_code
    join_room:
      type: object
      properties:
        avatar:
          type: string
          format: byte
          description: Binary representation of the player avatar
        nickname:
          type: string
          description: The nickname of the player joining the room
          example: Majiy
        room_code:
          type: string
          description: The unqiue code of the room to join
          example: ABCDE
      required:
        - avatar
        - nickname
        - room_code
    room_joined:
      type: object
      properties:
        players:
          type: array
          items:
            nickname:
              type: string
              description: The nickname of the player joining the room
              example: Majiy
            avatar:
              type: string
              format: byte
            description: Binary representation of the player avatar
        player_id:
          type: string
          description: A unique player id
        host_player_nickname:
          type: string
          description: The nickname of the host player
          example: Majiy
      required:
        - nickname
        - avatar
